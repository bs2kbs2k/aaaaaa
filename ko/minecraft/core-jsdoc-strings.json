{
    "AgentAssist": "에이전트가 할 수 있는 행동",
    "Array": "목록의 항목을 추가 및 제거하고 바꿉니다.\n\n목록의 항목을 추가 및 제거하고 바꿉니다.",
    "Array.every": "",
    "Array.every|param|callbackfn": "",
    "Array.filter": "콜백 함수에 지정된 조건을 충족하는 배열 내 요소를 반환합니다.",
    "Array.filter|param|callbackfn": "인수를 2개까지 허용하는 함수입니다. filter 메서드는 배열의 각 요소에 대해 callbackfn 함수를 한 번 호출합니다.",
    "Array.forEach": "",
    "Array.forEach|param|callbackfn": "",
    "Array.get": "지정한 인덱스에 있는 값을 가져옵니다.",
    "Array.get|param|index": "목록에서 항목의 0 기반 위치입니다(예: 0).",
    "Array.indexOf": "배열에서 어떤 값이 처음 나타난 위치를 찾아 리턴합니다.",
    "Array.indexOf|param|fromIndex": "검색을 시작할 배열 인덱스입니다. fromIndex를 생략하면 인덱스 0부터 검색을 시작합니다.",
    "Array.indexOf|param|item": "배열에서 찾을 값입니다.",
    "Array.insertAt": "배열에서 원하는 위치에 새로운 데이터를 삽입합니다. 배열의 길이가 1만큼 증가됩니다.",
    "Array.insertAt|param|index": "값을 삽입할 목록 내의 0기반 위치입니다(예: 0).",
    "Array.join": "",
    "Array.join|param|sep": "",
    "Array.length": "배열의 길이를 가져오거나 설정합니다. 이 값은 배열에서 마지막 요소의 인덱스보다 1만큼 큰 숫자입니다.",
    "Array.map": "배열의 각 요소에 대해 정의된 콜백 함수를 호출한 후 결과가 포함된 배열을 반환합니다.",
    "Array.map|param|callbackfn": "인수를 2개까지 허용하는 함수입니다. map 메서드는 배열의 각 요소에 대해 callbackfn 함수를 한 번 호출합니다.",
    "Array.pop": "배열의 마지막에 저장되어있는 값을 리턴하고, 그 값을 배열에서 제거합니다.",
    "Array.push": "배열의 마지막에 새로운 데이터를 추가합니다.",
    "Array.reduce": "배열의 모든 요소에 대해 지정된 콜백 함수를 호출합니다. 콜백 함수의 반환 값은 누적된 결과이며 다음 번 콜백 함수 호출 시 인수로 제공됩니다.",
    "Array.reduce|param|callbackfn": "인수를 3개까지 허용하는 함수입니다. reduce 메서드는 배열의 각 요소에 대해 callbackfn 함수를 한 번 호출합니다.",
    "Array.reduce|param|initialValue": "누적을 시작하는 초기 값입니다. callbackfn 함수를 처음 호출하면 배열 값 대신 이 값이 인수로 사용됩니다.",
    "Array.removeAt": "배열에서 원하는 위치에 있는 데이터를 삭제합니다.",
    "Array.removeElement": "개체의 첫 번째 인스턴스를 제거합니다. 제거된 경우 true를 반환합니다.",
    "Array.reverse": "데이터들의 순서를 반대로 뒤집어 만든 배열을 만들어 리턴합니다. 첫 번째 데이터는 마지막 위치로 이동되고, 마지막 데이터는 첫 번째 데이터가 됩니다.",
    "Array.set": "특정 인덱스에 값을 저장합니다.",
    "Array.set|param|index": "값을 저장할 목록 내의 0기반 위치입니다(예: 0).",
    "Array.shift": "배열의 첫 번재 위치에 저장되어있는 값을 리턴하고, 그 값을 배열에서 제거합니다. 배열의 크기(길이)가 줄어듭니다.",
    "Array.slice": "배열의 섹션을 반환합니다.",
    "Array.slice|param|end": "배열에서 지정된 부분의 끝입니다(예: 0).",
    "Array.slice|param|start": "배열에서 지정된 부분의 시작입니다(예: 0).",
    "Array.some": "",
    "Array.some|param|callbackfn": "",
    "Array.sort": "배열의 요소를 정렬한 후 배열을 반환합니다. 이 정렬 작업은 불안정할 수 있습니다.",
    "Array.splice": "배열에서 데이터들을 제거합니다.",
    "Array.splice|param|deleteCount": "제거할 요소의 개수입니다(예: 0).",
    "Array.splice|param|start": "배열에서 요소 제거를 시작할 0기반 위치입니다(예: 0).",
    "Array.unshift": "배열의 첫 번째 위치에 새 데이터를 삽입하고, 배열의 길이를 리턴합니다.",
    "Block": "Minecraft 블록 유형(잔디, 돌, 공기 등)",
    "Boolean.toString": "불 값을 문자열로 바꿔 리턴합니다.",
    "ChatArgument": "채팅 명령에 사용할 수 있는 인수",
    "ColoredBlock": "색을 변경할 수 있는 블록",
    "ComparatorMode": "비교기 모드",
    "DayTime": "시간",
    "FillOperation": "기존 블록의 채우기 옵션. 기존 블록 유지, 바꾸기 또는 파괴 제어",
    "FillOperation.Destroy": "공기 블록을 포함한 범위 내 블록을 파괴하고 해당 블록을 설치한다. 기존 블록은 블록을 다이아몬드삽이나 곡괭이로 파괴하는 경우와 동일하게 처리된다.",
    "FillOperation.Hollow": "교체하기와 같은 역할이지만 블록을 채울 때, 가장자리 1칸을 제외하고 가운데는 빈 공간으로 남겨둔다.(거대한 방을 만들 때 쓰면 좋은 명령이다.)",
    "FillOperation.Keep": "기존 블록 중 공기 블록을 제외한 모든 블록을 남기고 해당 블록을 설치한다.",
    "FillOperation.Outline": "파내기와 비슷한 역할이지만 블록을 채울 때, 가장자리 1칸을 제외하고 가운데의 기존 블록을 그대로 놔둔다.(거대한 방을 만들 때 쓰면 좋은 명령이다.)",
    "FillOperation.Replace": "공기 블록을 포한한 범위 내 모든 블록을 제거하고 설치한다. 기존 블록은 그냥 삭제된다.",
    "GameDifficulty": "게임 플레이 설정의 게임 난이도",
    "GameRule": "게임 플레이 설정의 게임 규칙",
    "LeverPosition": "켜짐 또는 꺼짐 상태일 때 레버를 정렬하는 위치",
    "Math": "수를 이용한 복잡한 연산입니다.",
    "Math.abs": "(그 값의 부호와 상관없이) 어떤 수의 절대값을 리턴합니다.\n예를 들어, -5와 5의 절대값은 모두 5입니다.",
    "Math.abs|param|x": "",
    "Math.acos": "수의 아크코사인(라디안 단위)을 반환합니다.",
    "Math.acos|param|x": "숫자",
    "Math.asin": "수의 아크사인(라디안 단위)을 반환합니다.",
    "Math.asin|param|x": "숫자",
    "Math.atan": "수의 아크탄젠트(라디안 단위)를 반환합니다.",
    "Math.atan2": "인수 몫의 아크탄젠트를 반환합니다.",
    "Math.atan2|param|x": "숫자",
    "Math.atan2|param|y": "숫자",
    "Math.atan|param|x": "숫자",
    "Math.ceil": "해당 숫자 인수보다 크거나 같은 가장 작은 숫자를 반환합니다.",
    "Math.ceil|param|x": "",
    "Math.constrain": "",
    "Math.constrain|param|high": "범위의 상한(모든 데이터 유형)",
    "Math.constrain|param|low": "범위의 하한(모든 데이터 유형)",
    "Math.constrain|param|value": "제한할 숫자(모든 데이터 유형)",
    "Math.cos": "숫자의 코사인을 반환합니다.",
    "Math.cos|param|x": "각도(라디안 단위)",
    "Math.exp": "``e^x``를 반환합니다.",
    "Math.exp|param|x": "숫자",
    "Math.floor": "해당 숫자 인수보다 작거나 같은 가장 큰 숫자를 반환합니다.",
    "Math.floor|param|x": "",
    "Math.idiv": "두 숫자를 나눈 값인 부호 있는 32비트 정수를 반환합니다.",
    "Math.idiv|param|x": "첫 번째 숫자",
    "Math.idiv|param|y": "두 번째 숫자",
    "Math.imul": "두 숫자를 곱한 값인 부호 있는 32비트 정수를 반환합니다.",
    "Math.imul|param|x": "첫 번째 숫자",
    "Math.imul|param|y": "두 번째 숫자",
    "Math.isNaN": "JavaScript의 isNaN() 함수를 노출합니다.",
    "Math.log": "숫자의 자연 로그(기본 e)를 반환합니다.",
    "Math.log|param|x": "숫자",
    "Math.map": "어떤 범위의 값을 다른 범위의 값으로 다시 매핑합니다. 즉,``이전 최소값`` 은 ``최소값``으로, ``이전 최대값`` 은 ``최대값``으로 범위가 변경되고, 이전 범위에 포함되는 값도 새로운 범위 이내의 값으로 변경됩니다.",
    "Math.map|param|fromHigh": "현재 전류값의 최대 범위, 예시: 1023",
    "Math.map|param|fromLow": "현재 전류값의 최소 범위",
    "Math.map|param|toHigh": "변경할 전류값의 최대 범위, 예시: 4",
    "Math.map|param|toLow": "변경할 전류값의 최소 범위",
    "Math.map|param|value": "범위를 변경할 현재 값",
    "Math.max": "",
    "Math.min": "",
    "Math.pow": "",
    "Math.pow|param|x": "",
    "Math.pow|param|y": "",
    "Math.random": "0과 1 사이의 의사 난수를 반환합니다.",
    "Math.randomRange": "",
    "Math.randomRange|param|max": "상위 포함 경계(예: 10)",
    "Math.randomRange|param|min": "하위 포함 경계(예: 0)",
    "Math.round": "가장 가까운 숫자로 반올림한 제공된 숫자 표현식을 반환합니다.",
    "Math.roundWithPrecision": "",
    "Math.roundWithPrecision|param|digits": "",
    "Math.roundWithPrecision|param|x": "",
    "Math.round|param|x": "가장 가까운 숫자로 반올림할 값입니다.",
    "Math.sign": "",
    "Math.sign|param|x": "",
    "Math.sin": "숫자의 사인을 반환합니다.",
    "Math.sin|param|x": "각도(라디안 단위)",
    "Math.sqrt": "",
    "Math.sqrt|param|x": "",
    "Math.tan": "숫자의 탄젠트를 반환합니다.",
    "Math.tan|param|x": "각도(라디안 단위)",
    "Math.trunc": "소수 부분을 잘라낸 숫자를 반환합니다.",
    "Math.trunc|param|x": "",
    "Number.toString": "",
    "Position": "플레이어 위치에 상대적인 세계 좌표입니다.",
    "Position.add": "오프셋을 추가하고 새 위치를 반환합니다.",
    "Position.getValue": "지정된 좌표 x, y 또는 z의 값을 반환합니다.",
    "Position.getValue|param|direction": "좌표 값을 반환할 축",
    "Position.isRelative": "좌표가 사용자에 대해 상대적인지 여부를 나타내는 값을 가져옵니다.",
    "Position.move": "지정된 블록만큼 이동한 위치를 반환합니다.",
    "Position.toString": "이 위치의 문자열 표현을 반환합니다.",
    "Position.toWorld": "이 위치를 세계 위치로 변환하여 새로운 세계 위치를 생성합니다.",
    "ShapeOperation": "모양 채우기 연산자",
    "ShapeOperation.Hollow": "교체하기와 같은 역할이지만 블록을 채울 때, 가장자리 1칸을 제외하고 가운데는 빈 공간으로 남겨둔다.(거대한 방을 만들 때 쓰면 좋은 명령이다.)",
    "ShapeOperation.Outline": "파내기와 비슷한 역할이지만 블록을 채울 때, 가장자리 1칸을 제외하고 가운데의 기존 블록을 그대로 놔둔다.(거대한 방을 만들 때 쓰면 좋은 명령이다.)",
    "ShapeOperation.Replace": "공기 블록을 포한한 범위 내 모든 블록을 제거하고 설치한다. 기존 블록은 그냥 삭제된다.",
    "String": "텍스트 문자열을 연결하고, 잘라내고, 찾아냅니다.\n\n텍스트 문자열을 연결하고, 잘라내고, 찾아냅니다.",
    "String.charAt": "문자열에서 원하는 위치에 있는 문자를 리턴합니다.",
    "String.charAt|param|index": "",
    "String.charCodeAt": "원하는 위치에 있는 문자의 유니코드(Unicode) 값을 리턴합니다.",
    "String.charCodeAt|param|index": "",
    "String.compare": "두 개의 문자열(ASCII 인코딩)을 비교한 결과를 리턴합니다.",
    "String.compare|param|that": "비교할 문자열",
    "String.concat": "두 개 이상의 문자열을 결합한 문자열을 리턴합니다.",
    "String.concat|param|other": "",
    "String.fromCharCode": "아스키(ASCII) 코드 정수 값을, 문자로 만들어 리턴합니다.",
    "String.includes": "",
    "String.includes|param|searchValue": "",
    "String.includes|param|start": "",
    "String.indexOf": "",
    "String.indexOf|param|searchValue": "",
    "String.indexOf|param|start": "",
    "String.isEmpty": "",
    "String.length": "",
    "String.substr": "현재 문자열의 일부를 잘라만든, 부분 문자열을 리턴합니다.",
    "String.substr|param|length": "잘라낼 문자의 개수",
    "String.substr|param|start": "첫 문자 위치; 마지막 문자에서 부터 시작해서 음수 가능, 예시: 0",
    "TargetSelector": "대상 선택기",
    "TargetSelector.addRule": "이 대상 선택기에 규칙을 추가합니다.",
    "TargetSelector.addRule|param|rule": "추가할 규칙(예: \"type\")",
    "TargetSelector.addRule|param|value": "규칙의 값(예: \"chicken\")",
    "TargetSelector.atCoordinate": "이 대상 선택기의 기본 좌표를 설정합니다.",
    "TargetSelector.atCoordinate|param|p": "이 선택기를 설정할 좌표",
    "TargetSelector.outsideRadius": "선택기의 기본 좌표를 기준으로 최소 거리를 설정합니다.",
    "TargetSelector.outsideRadius|param|radius": "이 대상 선택기의 블록 단위 최소 거리(예: 10)",
    "TargetSelector.toString": "이 대상 선택기의 게임 표기법이 포함된 문자열을 반환합니다.",
    "TargetSelector.withinRadius": "선택기의 기본 좌표를 기준으로 최대 거리를 설정합니다.",
    "TargetSelector.withinRadius|param|radius": "이 대상 선택기의 블록 단위 최대 거리(예: 5)",
    "TestForBlocksMask.All": "복사할 영역에 있는 공기 블록을 포함한 모든 블록을 복사하여 대상 지역에 복사합니다.",
    "TestForBlocksMask.Masked": "복사할 영역에 있는 공기 블록은 복사하지 않고, 공기 블록 위치에 있던 대상 지역의 블록은 그대로 둡니다.",
    "TimeQuery": "시간 쿼리의 시간 값 유형",
    "TimeQuery.RealLife": "마인크래프트 게임의 틱으로 지나가는 실제 시간",
    "TravelMethod": "플레이어 또는 몹의 여행 방법",
    "TravelMethod.Bounce": "튕기기",
    "TravelMethod.Climb": "사다리 오르기",
    "TravelMethod.Fall": "날고있지 않은 공중에서(떨어지거나 올라가는 경우)",
    "TravelMethod.Fly": "비행",
    "TravelMethod.Riding": "아무 것이나 타기",
    "TravelMethod.Sneak": "웅크리기",
    "TravelMethod.Sprint": "달리기",
    "TravelMethod.SwimLava": "용암에서 수영하기",
    "TravelMethod.SwimWater": "물에서 수영하기",
    "TravelMethod.Walk": "평범하게 걷기(땅에 붙어서 이동하기)",
    "agent": "마인크래프트에서 당신의 일을 대신 해주는 친구",
    "agent.attack": "에이전트가 지정된 방향을 공격합니다.",
    "agent.attack|param|direction": "에이전트가 어느 방향을 공격할 지를 나타내는 변수, 예를 들어 앞, 뒤",
    "agent.collect": "에이전트가 특정한 블록이나 아이템을 수집합니다.",
    "agent.collectAll": "에이전트가 주변의 모든 아이템과 블록을 수집합니다.",
    "agent.collect|param|block": "수집하려는 블록이나 아이템의 종류",
    "agent.destroy": "에이전트가 지정된 방향의 블록을 파괴합니다.",
    "agent.destroy|param|direction": "에이전트가 어느 방향의 블록을 파괴할 지를 나타내는 변수, 예를 들어 앞, 뒤",
    "agent.detect": "에이전트가 지정된 방향에 블록이 있는 지를 탐지합니다.",
    "agent.detect|param|direction": "에이전트가 어느 방향을 탐지할 지를 나타내는 변수, 예를 들어 앞, 뒤",
    "agent.detect|param|kind": "에이전트가 탐지해야할 블록 종류",
    "agent.drop": "지정된 인벤토리 슬롯의 아이템을 버립니다.",
    "agent.dropAll": "에이전트가 인벤토리의 모든 블록이나 아이템을 지정된 방향에 버립니다.",
    "agent.dropAll|param|direction": "에이전트가 어느 방향에 아이템을 버릴 지를 나타내는 변수, 예를 들어 앞, 뒤",
    "agent.drop|param|direction": "에이전트가 어느 방향에 아이템을 버릴 지를 나타내는 변수, 예를 들어 앞, 뒤",
    "agent.drop|param|quantity": "에이전트가 버릴 아이템의 개수를 나타내는 숫자, 예를 들어 1,2 3(정수값)",
    "agent.drop|param|slot": "에이전트가 버릴 아이템이 들어있는 인벤토리 슬롯을 나타내는 숫자(1~27), 예를 들어 1,2 3(정수값)",
    "agent.getItemCount": "에이전트가 지정된 인벤토리 슬롯에 있는 아이템의 개수를 가져옵니다.",
    "agent.getItemCount|param|slot": "에이전트가 개수를 셀 아이템이 들어있는 인벤토리 슬롯을 나타내는 숫자(1~27), 예를 들어 1,2 3(정수값)",
    "agent.getItemDetail": "에이전트가 지정된 인벤토리 슬롯에 있는 아이템의 고유번호를 가져옵니다.",
    "agent.getItemDetail|param|slot": "에이전트가 고유번호를 가져올 아이템이 들어있는 인벤토리 슬롯을 나타내는 숫자(1~27), 예를 들어 1,2 3(정수값)",
    "agent.getItemSpace": "에이전트가 지정된 인벤토리 슬롯에 아이템을 더 넣을 빈 공간의 수를 가져옵니다.",
    "agent.getItemSpace|param|slot": "에이전트가 빈 공간을 셀 인벤토리 슬롯을 나타내는 숫자(1~27), 예를 들어 1,2 3(정수값)",
    "agent.inspect": "에이전트가 특정한 방향에 특정 블록이 있는지 탐지합니다.",
    "agent.inspect|param|direction": "에이전트가 어느 방향을 탐지할 지를 나타내는 변수, 예를 들어 앞, 뒤",
    "agent.inspect|param|kind": "에이전트가 탐지할 블록이나 아니템의 종류",
    "agent.move": "에이전트가 지정된 방향으로 이동합니다.",
    "agent.move|param|blocks": "에이전트가 몇 블록 이동할 지를 나타내는 숫자, 예를 들어 1,2 3(정수값)",
    "agent.move|param|direction": "에이전트가 어느 방향으로 이동할 지를 나타내는 변수, 예를 들어 앞으로, 뒤로",
    "agent.place": "에이전트가 현재 선택된 인벤토리 슬롯에서 블록이나 아이템을 꺼내, 지정한 방향에 놓습니다.",
    "agent.place|param|direction": "아이템을 놓을 방향(예: SixDirection.Back)",
    "agent.setAssist": "에이전트가 특정 행동을 하도록 제어합니다.",
    "agent.setAssist|param|assist": "에이전트가 슈퍼 파워를 얻습니다.(모든 방해물 블록을 파괴합니다.)",
    "agent.setAssist|param|on": "활성화/비활성화 선택",
    "agent.setSlot": "에이전트가 지정된 인벤토리 슬롯을 활성화합니다.",
    "agent.setSlot|param|slot": "인벤토리 슬롯 숫자(1~27), 예를 들어 1,2 3(정수값)",
    "agent.teleportToPlayer": "에이전트가 플레이어에게 텔레포트합니다.",
    "agent.till": "에이전트가 지정된 방향의 토양을 경작합니다.",
    "agent.till|param|direction": "에이전트가 어느 방향을 경작할 지를 나타내는 변수, 예를 들어 앞, 뒤",
    "agent.transfer": "에이전트가 한 인벤토리 슬롯에서 다른 인벤토리 슬롯으로 아이템을 옮긴다.",
    "agent.transfer|param|destinationSlot": "에이전트가 옮길 아이템이 들어있는 인벤토리 슬롯을 나타내는 숫자(1~27), 예를 들어 1,2 3(정수값)",
    "agent.transfer|param|quantity": "에이전트가 옮길 아이템의 개수를 나타내는 숫자, 예를 들어 1,2 3(정수값)",
    "agent.transfer|param|sourceSlot": "에이전트가 옮길 아이템이 들어있는 인벤토리 슬롯 숫자(1~27), 예를 들어 1,2 3(정수값)",
    "agent.turn": "에이전트가 지정된 방향으로 회전합니다.",
    "agent.turn|param|direction": "빌더가 회전할 방향을 나타내는 변수, 예를 들어 왼쪽, 오른쪽",
    "blocks": "세계에서 블록을 추가, 검사 및 변경하기 위한 모든 것입니다.",
    "blocks.block": "게임 내의 블록을 나타냅니다.",
    "blocks.blockById": "게임 내 블록 또는 아이템을 해당 값 ID로 나타냅니다.",
    "blocks.blockById|param|id": "게임 내 블록 또는 아이템의 ID",
    "blocks.blockByName": "게임 내 블록 또는 아이템을 해당 코드 이름으로 나타냅니다.",
    "blocks.blockByName|param|name": "블록의 이름(에: \"stone\")",
    "blocks.blockWithData": "게임 내 블록 또는 아이템을 해당 데이터 값으로 나타냅니다.",
    "blocks.blockWithData|param|b": "블록 또는 아이템",
    "blocks.blockWithData|param|data": "블록 또는 아이템의 데이터 값",
    "blocks.block|param|block": "블록",
    "blocks.clone": "입체 도형 영역을 다른 위치에 복사합니다.",
    "blocks.cloneFiltered": "영역의 블록이 특정 블록 유형과 일치하면 입체 도형 영역을 다른 위치에 복사합니다.",
    "blocks.cloneFiltered|param|begin": "입체 도형 영역의 첫 번째 모서리",
    "blocks.cloneFiltered|param|block": "복사할 때 검색할 블록 유형",
    "blocks.cloneFiltered|param|destination": "대상 영역의 첫 번째 모서리",
    "blocks.cloneFiltered|param|end": "입체 도형 영역의 반대쪽 모서리",
    "blocks.cloneFiltered|param|mode": "복사한 영역을 처리하는 방법",
    "blocks.clone|param|begin": "입체 도형 영역의 첫 번째 모서리",
    "blocks.clone|param|destination": "대상 영역의 첫 번째 모서리",
    "blocks.clone|param|end": "입체 도형 영역의 반대쪽 모서리",
    "blocks.clone|param|mask": "공기 블록을 처리하는 방법",
    "blocks.clone|param|mode": "복사한 영역을 처리하는 방법",
    "blocks.color": "",
    "blocks.colorToBlock": "",
    "blocks.colorToBlock|param|color": "",
    "blocks.colorToBlock|param|type": "",
    "blocks.color|param|color": "",
    "blocks.comparator": "특정 상태의 비교기를 생성합니다.",
    "blocks.comparator|param|direction": "비교기가 향하고 있는 방향",
    "blocks.comparator|param|mode": "비교기의 비교 모드",
    "blocks.fill": "두 위치 사이의 공간을 채웁니다.\n\n\n\n@param 연산자 = 지정된 영역 내의 블록 처리",
    "blocks.fill|param|block": "볼륨을 채울 블록",
    "blocks.fill|param|from": "입체 도형 영역의 첫 번째 모서리",
    "blocks.fill|param|to": "입체 도형 영역의 반대쪽 모서리",
    "blocks.item": "게임 내 아이템을 나타냅니다.",
    "blocks.item|param|item": "아이템",
    "blocks.lever": "특정 상태의 레버를 생성합니다.",
    "blocks.lever|param|position": "레버의 위치 상태",
    "blocks.onBlockBroken": "특정 유형의 블록을 캐내거나 파괴할 때 코드를 실행합니다.",
    "blocks.onBlockBroken|param|block": "파괴될 때 이 코드를 트리거하는 블록 유형",
    "blocks.onBlockPlaced": "특정 유형의 블록을 배치할 때 때 코드를 실행합니다.",
    "blocks.onBlockPlaced|param|block": "배치될 때 이 코드를 트리거하는 블록 유형",
    "blocks.place": "블록을 세계에 배치",
    "blocks.place|param|block": "배치할 블록",
    "blocks.place|param|pos": "블록을 배치할 위치",
    "blocks.print": "지정된 블록으로 만들어진 지정된 텍스트를 게임 세계의 지정된 위치에 생성합니다.",
    "blocks.print|param|block": "텍스트를 생성하는 데 사용할 블록 유형",
    "blocks.print|param|direction": "텍스트를 프린트할 기준 축",
    "blocks.print|param|position": "세계에서 텍스트를 프린트할 좌표",
    "blocks.print|param|text": "세계에 프린트할 텍스트(예: \"HELLO\")",
    "blocks.repeater": "특정 상태의 탐지기를 생성합니다.",
    "blocks.repeater|param|delay": "탐지기 지연 시간(게임 틱 단위)",
    "blocks.repeater|param|direction": "탐지기가 향하고 있는 방향",
    "blocks.replace": "지정된 영역에 있는 특정 유형의 모든 블록을 새 블록 유형으로 바꿉니다.",
    "blocks.replace|param|from": "입체 도형 영역의 첫 번째 모서리",
    "blocks.replace|param|newblock": "기존 블록을 대체할 새로운 블록 유형",
    "blocks.replace|param|oldblock": "새로운 블록 유형으로 대체되는 블록 유형",
    "blocks.replace|param|to": "입체 도형 영역의 반대쪽 모서리",
    "blocks.testForBlock": "지정된 좌표에 있는 블록이 특정 유형인지 여부를 테스트합니다.",
    "blocks.testForBlocks": "두 영역의 블록이 일치하는지 여부를 테스트합니다.",
    "blocks.testForBlock|param|block": "테스트할 대상 블록의 유형",
    "blocks.testForBlock|param|pos": "블록이 있어야 하는 좌표",
    "gameplay": "게임 모드, 날씨, 시간 및 규칙 변경을 제어하는 명령입니다.",
    "gameplay.dismissChat": "",
    "gameplay.immutableWorld": "",
    "gameplay.immutableWorld|param|enabled": "",
    "gameplay.setDifficulty": "게임 난이도를 변경합니다.",
    "gameplay.setDifficulty|param|difficulty": "새로운 난이도",
    "gameplay.setGameMode": "선택한 플레이어의 게임 모드를 변경합니다.",
    "gameplay.setGameMode|param|mode": "원하는 게임 모드(예: GameMode.Survival)",
    "gameplay.setGameMode|param|player": "게임 모드가 변경될 대상 플레이어를 결정하는 선택기",
    "gameplay.setGameRule": "게임 규칙을 활성화하거나 비활성화합니다.",
    "gameplay.setGameRule|param|enabled": "지정된 규칙이 활성화되었는지 여부",
    "gameplay.setGameRule|param|rule": "변경할 게임 규칙(예: GameRule.PvP)",
    "gameplay.setWeather": "현재 날씨를 변경합니다.",
    "gameplay.setWeather|param|weather": "원하는 날씨(예: Weather.Clear)",
    "gameplay.time": "미리 설정된 시간을 나타냅니다.",
    "gameplay.timeAdd": "현재 시간에 틱(시간)을 추가합니다.",
    "gameplay.timeAdd|param|amount": "현재 시간에 추가할 틱(시간) 수(예: 100)",
    "gameplay.timeQuery": "현재 틱(시간)을 가져옵니다.",
    "gameplay.timeQuery|param|query": "쿼리할 시간 유형",
    "gameplay.timeSet": "현재 시간을 미리 설정된 시간 또는 사용자 지정 시간으로 설정합니다(게임 틱).",
    "gameplay.timeSet|param|time": "원하는 시간(예: DayTime.Day)",
    "gameplay.time|param|time": "미리 설정된 시간(예: DateTime.Day)",
    "gameplay.title": "",
    "gameplay.title|param|subTitle": "",
    "gameplay.title|param|target": "",
    "gameplay.title|param|title": "",
    "gameplay.toggleDownfall": "비가 내리지 않는 경우에는 비를 내리고 비가 내리는 경우에는 비를 멈춥니다.",
    "gameplay.xp": "선택한 플레이어에게 경험치를 부여합니다.",
    "gameplay.xp|param|amount": "부여할 경험치(예: 10)",
    "gameplay.xp|param|target": "경험치를 부여할 대상 플레이어를 결정하는 선택기",
    "getArgumentName": "지정된 ChatArgument 열거 값의 문자열 값을 반환합니다.",
    "loops.forever": "코드를 백그라운드에서 무한 반복합니다. 반복할 때마다 다른 코드를 함께 실행할 수 있습니다.",
    "loops.forever|param|body": "영구 반복할 코드",
    "loops.pause": "원하는 시간(ms, 1/1000초) 동안, 아무 작업도 하지 않고 시간을 보냅니다.",
    "loops.pause|param|ms": "예를 들면 다음과 같은 밀리초가 가능합니다: 100, 200, 500, 1000, 2000",
    "loops.runInBackground": "이 코드를 현재 코드와 함께 실행합니다.",
    "mobs": "마인크래프트 세계에서 사는 생명체입니다.",
    "mobs.animal": "게임에서 동물을 나타냅니다.",
    "mobs.animal|param|name": "동물 종류",
    "mobs.applyEffect": "",
    "mobs.applyEffect|param|amplifier": "",
    "mobs.applyEffect|param|duration": "",
    "mobs.applyEffect|param|effect": "",
    "mobs.applyEffect|param|target": "",
    "mobs.clearEffect": "",
    "mobs.clearEffect|param|target": "",
    "mobs.effect": "",
    "mobs.effect|param|amplifier": "",
    "mobs.effect|param|duration": "",
    "mobs.effect|param|effect": "",
    "mobs.effect|param|target": "",
    "mobs.enchant": "지정된 대상에 특정 마법을 부여합니다.",
    "mobs.enchant|param|level": "마법 부여 강도(예: 1)",
    "mobs.enchant|param|spell": "마법 부여의 코드 이름(예: \"infinity\")",
    "mobs.enchant|param|target": "마법을 부여 받을 플레이어를 결정하는 대상 선택기",
    "mobs.entitiesByType": "지정된 유형의 모든 몹(동말 또는 몬스터)을 선택합니다.",
    "mobs.entitiesByType|param|type": "선택할 몹 유형",
    "mobs.execute": "대상을 대신해 명령을 실행합니다.",
    "mobs.executeDetect": "지정된 위치에서 특정 블록 유형을 찾으면 명령을 실행합니다.",
    "mobs.executeDetect|param|command": "지정된 블록을 성공적으로 찾을 경우 선택한 대상이 실행하는 전체 명령(예: \"say Hi!\")",
    "mobs.executeDetect|param|detectBlock": "테스트할 대상 블록 유형",
    "mobs.executeDetect|param|detectPosition": "블록을 찾을 위치",
    "mobs.execute|param|command": "선택한 대상이 실행하는 전체 명령(예: \"say Hi!\")",
    "mobs.execute|param|position": "명령을 실행할 좌표",
    "mobs.execute|param|target": "명령을 실행할 엔터티를 결정하는 대상 선택기",
    "mobs.give": "게임의 블록이나 아이템을 지정된 플레이어에게 제공합니다.",
    "mobs.give|param|amount": "제공할 양(예: 1)",
    "mobs.give|param|block": "제공할 블록 또는 아이템",
    "mobs.give|param|target": "블록 또는 아이템을 받을 플레이어를 결정하는 대상 선택기",
    "mobs.kill": "선택한 엔티티를 죽입니다.",
    "mobs.kill|param|target": "죽일 엔티티를 결정하는 대상 선택기",
    "mobs.monster": "게임 내에서 몬스터를 나타냅니다.",
    "mobs.monster|param|name": "동물 유형",
    "mobs.near": "지정된 위치 주변의 대상 선택",
    "mobs.near|param|pos": "대상을 선택할 위치",
    "mobs.near|param|radius": "대상을 선택할 지정된 위치로부터의 블록 단위 거리(예: 5)",
    "mobs.near|param|target": "선택할 엔터티 유형",
    "mobs.onMobKilled": "특정 유형의 생명체를 죽이면 코드를 실행합니다.",
    "mobs.onMobKilled|param|mob": "생명체 유형",
    "mobs.parseSelector": "지정된 문자열을 TargetSelector 개체로 구문 분석합니다. 이 함수는 인수가 올바른 유형인지 또는\n인수 이름이 유효한지 검사하지 않습니다.\n\n@구문 분석된 TargetSelector 개체를 반환하거나, 문자열이 잘못된 경우 null을 반환합니다.",
    "mobs.parseSelector|param|str": "구문 분석할 대상 선택기",
    "mobs.playerByName": "지정된 이름을 가진 플레이어를 선택합니다.",
    "mobs.playerByName|param|name": "선택할 플레이어 이름(예: name)",
    "mobs.playersInGameMode": "지정된 게임 모드 내의 모든 플레이어를 선택합니다.",
    "mobs.playersInGameMode|param|mode": "모든 플레이어를 선택할 대상 게임 모드",
    "mobs.projectile": "게임 내에서 마법 발사를 나타냅니다.",
    "mobs.projectile|param|name": "발사 유형",
    "mobs.spawn": "지정된 위치에 생명체를 생성합니다.",
    "mobs.spawn|param|destination": "생명체를 생성할 좌표",
    "mobs.spawn|param|mob": "생성할 생명체",
    "mobs.target": "플레이어 또는 몹 집합을 선택합니다.",
    "mobs.target|param|kind": "선택할 엔터티 유형",
    "mobs.teleportToPlayer": "플레이어에게 엔티티를 텔레포트합니다.",
    "mobs.teleportToPlayer|param|destination": "엔티티를 텔레포트할 대상 플레이어를 결정하는 대상 선택기",
    "mobs.teleportToPlayer|param|target": "텔레포트할 엔티티를 결정하는 대상 선택기",
    "mobs.teleportToPosition": "엔티티를 다른 위치로 텔레포트합니다.",
    "mobs.teleportToPosition|param|destination": "선택한 엔티티를 텔레포트할 대상 좌표",
    "mobs.teleportToPosition|param|target": "텔레포트할 엔티티를 결정하는 대상 선택기",
    "parseFloat": "",
    "parseInt": "",
    "player": "게임에서 발생하는 이벤트에 대해 명령을 실행하고, 커뮤니케이션하고 반응합니다.",
    "player.chatCommandSyntaxError": "",
    "player.errorMessage": "게임 채팅 내 오류를 표시합니다.\n* @param msg 게임 채팅에 표시할 오류",
    "player.execute": "현재 플레이어로 게임 명령을 실행합니다.",
    "player.execute|param|command": "실행할 슬래시 명령으로, 앞에 ``/``를 사용하지 않아도 됨(예: \"say Hi!\")",
    "player.getChatArg": "가장 최근 플레이어 채팅 메시지에서 지정된 인수를 가져옵니다.",
    "player.getChatArgs": "",
    "player.getChatArgs|param|command": "인수를 가져올 채팅 명령",
    "player.message": "마지막 메시지를 가져옵니다(있는 경우).",
    "player.name": "현재 플레이어(사용자 본인)의 이름을 반환합니다.",
    "player.onArrowShot": "현재 플레이어가 화살을 쏘면 코드를 실행합니다.",
    "player.onBounced": "",
    "player.onCameraUsed": "",
    "player.onChat": "게임 채팅에 특정 메시지를 입력하면 코드를 실행합니다.",
    "player.onChatCommand": "게임 채팅에 특정 메시지를 입력하면 코드를 실행합니다.",
    "player.onChatCommandCore": "채팅에 키워드를 입력하면 코드를 실행합니다.",
    "player.onChatCommandCore|param|command": "이 명령과 연결할 채팅 키워드. 모든 메시지의 경우 ``*``(예: \"jump\")",
    "player.onChatCommand|param|command": "이 명령과 연결할 채팅 키워드. 모든 메시지의 경우 ``*``(예: \"jump\")",
    "player.onChat|param|command": "이 명령과 연결할 채팅 키워드. 모든 메시지의 경우 ``*``(예: \"jump\")",
    "player.onDied": "현재 플레이어가 죽으면 코드를 실행합니다.",
    "player.onItemInteracted": "",
    "player.onTeleported": "현재 플레이어가 텔레포트되면 코드를 실행합니다.",
    "player.onTellCommand": "다른 플레이어가 특정 메시지를 귓속말로 하면 코드를 실행합니다.",
    "player.onTellCommand|param|command": "이 명령과 연결할 채팅 키워드. 모든 메시지의 경우 ``*``(예: \"jump\")",
    "player.onTravelled": "현재 플레이어가 특정 방식으로 여행하면 코드를 실행합니다.",
    "player.onTravelled|param|method": "여행 방식",
    "player.position": "현재 플레이어의 세계 위치를 반환합니다.",
    "player.runChatCommand": "사용자의 코드로 채팅 명령을 실행합니다.",
    "player.runChatCommandWithArguments": "사용자의 코드와 인수를 사용하여 채팅 명령을 실행합니다.",
    "player.runChatCommandWithArguments|param|arg": "채팅 명령에 사용할 모든 인수가 들어 있는 문자열",
    "player.runChatCommandWithArguments|param|command": "실행할 채팅 명령(예: \"jump\")",
    "player.runChatCommand|param|command": "실행할 채팅 명령(예: \"jump\")",
    "player.say": "게임 채팅에 메시지를 게시합니다.",
    "player.say|param|message": "채팅에 표시할 메시지(예: \"Hi!\")",
    "player.teleport": "현재 플레이어를 다른 위치로 텔레포트합니다.",
    "player.teleport|param|to": "대상 위치",
    "player.tell": "대상에게 메시지를 귓속말로 전합니다.",
    "player.tell|param|message": "귓속말로 전할 텍스트(예: \"Hi!\")",
    "player.tell|param|target": "엔터티 선택기",
    "positions": "세계 및 상대 위치 연산자",
    "positions.add": "지정된 위치 2개를 사용하여 새 위치를 생성합니다.",
    "positions.add|param|p1": "추가할 첫 번째 위치",
    "positions.add|param|p2": "추가할 두 번째 위치",
    "positions.create": "새로운 상대 위치를 생성합니다(예: ~동쪽/서쪽, ~위쪽/아래쪽, ~남쪽/북쪽).",
    "positions.createHybrid": "상대 좌표와 절대 좌표를 혼합하여 새 위치를 생성합니다.",
    "positions.createWorld": "새 세계 위치를 생성합니다(예: 동쪽/서쪽, 위쪽/아래쪽, 남쪽/북쪽).",
    "positions.createWorld|param|x": "동쪽(+x) 또는 서쪽(-x) 좌표(블록 단위)",
    "positions.createWorld|param|y": "위쪽(+y) 또는 아래쪽(-y) 좌표(블록 단위)",
    "positions.createWorld|param|z": "남쪽(+z) 또는 북쪽(-z) 좌표(블록 단위)",
    "positions.create|param|x": "동쪽(+x) 또는 서쪽(-x) 좌표(블록 단위)",
    "positions.create|param|y": "위쪽(+y) 또는 아래쪽(-y) 좌표(블록 단위)",
    "positions.create|param|z": "남쪽(+z) 또는 북쪽(-z) 좌표(블록 단위)",
    "positions.random": "입체 도형 영역 내에서 임의 위치를 선택합니다.",
    "positions.random|param|p1": "입체 도형 영역의 첫 번째 모서리 위치",
    "positions.random|param|p2": "입체 도형 영역의 반대쪽 모서리 위치"
}